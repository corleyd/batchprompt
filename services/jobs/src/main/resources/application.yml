server:
  port: 8084
debug: true
spring:
  config:
    import:
      - ${HOME}/.batchprompt/local.yml
  application:
    name: jobs-service
  datasource:
    url: jdbc:postgresql://localhost:5432/batchprompt
    username: batchprompt
    password: batchprompt
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        default_schema: jobs
  flyway:
    locations: classpath:db/migration
    enabled: true
    schemas: jobs
    create-schemas: true
    baseline-on-migrate: true
  rabbitmq:
    host: localhost
    port: 5672
    username: batchprompt
    password: batchprompt
    virtual-host: /
logging:
  level:
    root: INFO
    org.springframework: DEBUG
    org.springframework.security: TRACE
    org.springframework.boot.autoconfigure: INFO
    org.springframework.context.annotation: INFO
    com.batchprompt: DEBUG
    org.flywaydb: TRACE
    org.hibernate: INFO
  file:
    name: logs/jobs.log
  logback:
    rollingpolicy:
      file-name-pattern: logs/jobs-%d{yyyy-MM-dd}.%i.log
      clean-history-on-start: false
      max-file-size: 10MB
      total-size-cap: 1GB        

services:
  name: jobs-service
  files:
    url: ${FILES_SERVICE_URL:http://localhost:8083}
  prompts:
    url: ${PROMPTS_SERVICE_URL:http://localhost:8082}

springdoc:
  swagger-ui:
    path: /swagger-ui.html

rabbitmq:
  exchange:
    name: batchprompt-exchange
  queue:
    jobs:
      name: jobs-queue
      exchange: jobs-exchange
      routing-key: jobs
    output:
      name: jobs-output-queue
      exchange: jobs-output-exchange
      routing-key: jobs-output
  routing:
    jobs:
      key: jobs.routing.key
    output:
      key: output.routing.key

# Model configuration
openai:
  api-key: ${OPENAI_API_KEY:your-openai-api-key}
  models:
    gpt-3.5-turbo:
      name: gpt-3.5-turbo
    gpt-4:
      name: gpt-4
